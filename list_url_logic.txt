페이지 요청 URL 
	http://localhost:8080/Project/board?type=list&page=1&direct=next&cond=title&word=java

Query String
	type=list&page=1&direct=next&cond=title&word=java

	type		: 요청작업 구분
		list 	: 목록보기
		insert	: 등록하기
		delete	: 삭제하기
		view 	: 내용보기
		update	: 편집하기

	page		: 요청 페이지 번호

	direct		: 요청구분
		first	: 첫 페이지
		prev	: 이전 페이지
		next 	: 다음 페이지
		last	: 마지막 페이지
		그 외의 값	: 페이지 값 유지

	cond		: 검색조건
		title	: 제목에서 검색
		content	: 내용에서 검색

	word		: 검색단어

처리 순서

	1. page 파라미터가 없거나 그 값이 1 이하의 값이면 기본값으로 1페이지를 설정한다.	
	2. 데이터 베이스로부터 등록된 전체 게시물 수를 취득한 후 전체 페이지 수(pageCount)를 구한다.
	3. direct 파라미터 값에 따라 다음 절차를 수행한다.
		3.1. direct 파라미터 값이 first 인 경우 페이지 값을 1로 설정한다.
		3.2. direct 파라미터 값이 last 인 경우 페이지 값을 전체 페이지수로 설정한다.
		3.3. direct 파라미터 값이 prev 인 경우 현재 페이지 값이 2 이상이면 1을 감소시킨다.
		3.4. direct 파라미터 값이 next 인 경우 현재 페이지 값이 전체 페이지 수 - 1 이하이면 1을 증가시킨다.
		3.5. direct 파라미터 값이 그 이 외인 경우 처리가 필요없다.
	4. 데이터베이스에 실행할 SQL 쿼리를 작성한다.
		4.1. SQL문 기본 베이스 SELECT * FROM boards
		4.2. 조건에 따른 검색구문을 추가한다.
			4.2.1. cond 파라미터의 값이 title 인 경우 title 컬럼에서 word 파라미터 값을 검색하도록 SQL문에 WHERE절을 추가한다.
				WHERE title LIKE '%word%'
			4.2.2. cond 파라미터의 값이 content 인 경우 content 컬럼에서 word 파라미터 값을 검색하도록 SQL문에 WHERE절을 추가한다.
				WHERE content LIKE '%word%'
	5. 현재 페이지 값을 이용하여 가져올 행을 선택한다.

		LIMIT start_pos, length

		start_pos 의 값은 가져올 시작행의 번호로써 아래의 공식을 통해 산출한다.

			(페이지 번호 * 페이지당 출력 목록 수) - 페이지당 출력 목록 수

		length 는 페이지 당 출력 목록 수이다.

	


